@import 'src/styles/variables';
@import '../input.module.scss';

.biginput {
  @extend .input;
  margin-top: 12px;
}

.smallInput {
  @extend .input;
  margin-top: 8px;
  height: 44px;

  @media screen and (min-width: 375px) {
    margin-top: 10px;
    height: 56px;
  }
}

.timeInput {
  width: 79px;
  @media screen and (min-width: 375px) {
    width: 104px;
  }
  @media screen and (min-width: 768px) {
    width: 140px;
  }
}

.inputSubtitle {
  font-size: 1.6rem;
  font-weight: 500;

  @media screen and (min-width: 375px) {
    font-size: 2rem;
  }
}

.smallInputContainer {
  display: flex;
  align-items: flex-end;
  justify-content: space-between;
  margin-top: 24px;
  gap: 4px;
  @media screen and (min-width: 768px) {
    gap: 20px;
  }
}

//예약 가능한 시간대 추가했을때 스타일
.isAdd {
  @extend .smallInputContainer;
  // padding-bottom: 16px;
  // border-bottom: 1px solid $gray_DDDDDD;
  // margin-bottom: 16px;

  @media screen and (min-width: 768px) {
    // margin-bottom: 21px;
    // padding-bottom: 21px;
  }
}

.smallInputWrapper {
  display: flex;
  flex-direction: column;
}

.timePlusIcon {
  cursor: pointer;
  @media screen and (min-width: 375px) {
    width: 56px;
    height: 56px;
  }
}

.date {
  border: 1px solid $gray_79747E;
  background-color: $white;
  display: flex;
  align-items: center;
}

//tlehj
.input[type='date'] {
  border: 1px solid $gray_79747E; // 테두리 설정은 본인 맘대로
  position: relative; // 캘린더 아이콘을 클릭해야만 달력이 보이기 때문에 이 영역 자체를 제어하기 위해 설정
  // width: 100%;
  // padding: 10px;
  background: url(../../../../../public/assets/icons/calendar.svg) no-repeat
    right 10px center / 35px auto; // 배경에 커스텀 아이콘을 넣어주자! x축은 오른쪽에서부터 10px 떨어지게 하고, y축은 가운데 정렬하고, width 35px에 height auto라는 크기를 부여한다.
  background-color: $white;
  border-radius: 4px;
  // text-align: center;
  font-size: 1.4rem;
  width: 130px;
  @media screen and (min-width: 375px) {
    width: 149px;
  }
  @media screen and (min-width: 768px) {
    width: 374px;
  }
}

// 실제 캘린더 아이콘을 클릭하는 영역을 의미하는 선택자
// 이 영역을 확장해서 input의 어떤 곳을 클릭해도 캘린더를 클릭한 것과 같은 효과를 만들자!
.input[type='date']::-webkit-calendar-picker-indicator {
  position: absolute; // 이를 설정하기 위해 사전에 relative를 설정한 것이다.
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  background: transparent; // 배경은 투명하게,
  color: transparent; // 글자도 투명하게! 이 두 설정을 통해 캘린더 아이콘을 사라지게 만든다.
  cursor: pointer;
}

// type이 date인 input의 placeholder를 커스텀하기 위한 선택자
// 기본적으로 type date인 input은 placeholder가 먹히지 않기 때문이다!
.input[type='date']::before {
  content: attr(
    placeholder
  ); // input 태그의 placeholder라는 속성값을 가져와서 content로 사용한다. 보통은 placeholder보다는 data-placeholder라는 커스텀 속성을 만들어서 사용하시는 것 같다.
  width: 100%;
  height: 100%;
}

// input에 어떠한 유효값이 입력된 상태인지 확인하는 선택자
// 날짜를 선택하면 유효값이 입력된다.
// 이 속성을 활용하고자 한다면 반드시 태그에 required 속성을 달아줘야한다.
.input[type='date']:valid::before {
  display: none; // 유효값이 입력된 경우 before에 있는 것을 사라지게 한다. 즉, placeholder를 사라지게 한다.
}
.dateInput {
  width: 130px;
  @media screen and (min-width: 375px) {
    width: 149px;
  }
  @media screen and (min-width: 768px) {
    width: 374px;
  }
}
